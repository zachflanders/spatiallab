services:
  django:
    build:
      context: ./django
      dockerfile: Dockerfile
    container_name: django
    command: ["poetry", "run", "gunicorn", "spatiallab.wsgi:application", "--bind", "0.0.0.0:8080"]
    volumes:
      - ./django:/app
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=spatiallab.settings
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/spatiallab
      - CELERY_BROKER_URL=pyamqp://rabbitmq
    expose:
      - "8080"
    depends_on:
      - postgres
      - rabbitmq

  postgres:
    image: postgis/postgis:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: spatiallab
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  react:
    build:
      context: ./react
      args:
        NEXT_PUBLIC_PROTOCOL: http
        NEXT_PUBLIC_ROOT_URL: localhost
        NEXT_PUBLIC_API_URL: localhost/api
        NEXT_PUBLIC_TILESERV_URL: localhost/tileserv
    container_name: react
    volumes:
      - ./react:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - django
    environment:
      NODE_ENV: development

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  celery:
    image: celery:latest
    container_name: celery
    command: ["celery", "-A", "spatiallab", "worker", "--loglevel=info"]
    volumes:
      - ./django:/app
    depends_on:
      - django
      - rabbitmq

  pg_tileserv:
    build: ./pg_tileserv
    environment:
      - PGHOST=postgres
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDATABASE=spatiallab
      - PGPORT=5432

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8081:8080"
    volumes:
      - jenkins_home:/var/jenkins_home

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - django
      - react

volumes:
  postgres_data:
  rabbitmq_data:
  jenkins_home:
