name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Authenticate Docker to GCP
      run: |
        gcloud auth configure-docker gcr.io

    - name: Build and push Django Docker image
      run: |
        docker build \
        --build-arg EMAIL_HOST="${{ secrets.EMAIL_HOST }}" \
        --build-arg EMAIL_HOST_USER="${{ secrets.EMAIL_HOST_USER }}" \
        --build-arg EMAIL_HOST_PASSWORD="${{ secrets.EMAIL_HOST_PASSWORD }}" \
        --build-arg GOOGLE_CREDENTIALS="${{ secrets.GOOGLE_CREDENTIALS }}" \
        --build-arg GCS_BUCKET_NAME="${{ secrets.GCS_BUCKET_NAME }}" \
        --platform linux/amd64 \
        -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/django-app ./django
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/django-app
    
    - name: Build and push React Docker image
      run: |
        docker build \
        --build-arg NEXT_PUBLIC_API_URL="${{ secrets.NEXT_PUBLIC_API_URL }}" \
        --build-arg NEXT_PUBLIC_ROOT_URL="${{ secrets.NEXT_PUBLIC_ROOT_URL }}" \
        --build-arg NEXT_PUBLIC_PROTOCOL="${{ secrets.NEXT_PUBLIC_PROTOCOL }}" \
        --build-arg NEXT_PUBLIC_TILESERV_URL="${{ secrets.NEXT_PUBLIC_TILESERV_URL }}" \
        --platform linux/amd64 \
        -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/react-app ./react
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/react-app
    
    - name: Build and push tileserv Docker image
      run: |
        docker build --platform linux/amd64 -t gcr.io/spatial-lab-434119/pg-tileserv ./pg_tileserv
        docker push gcr.io/spatial-lab-434119/pg-tileserv
 
    
    - name: Execute Django Migrations Job
      run: |
        gcloud run jobs execute django-migrations-job \
          --region ${{ secrets.GCP_REGION }} \
          --project ${{ secrets.GCP_PROJECT_ID }} \


    - name: Deploy Django to Cloud Run
      run: |
        gcloud run deploy django-app \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/django-app:latest \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --region ${{ secrets.GCP_REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --memory 512Mi \
          --add-cloudsql-instances ${{ secrets.GCP_PROJECT_ID }}:${{ secrets.GCP_REGION }}:${{ secrets.DB_NAME }} \
          --set-env-vars DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }},DB_HOST=${{ secrets.DB_HOST }},DB_NAME=${{ secrets.DB_NAME }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD='${{ secrets.DB_PASSWORD }}',DJANGO_SECRET_KEY='${{ secrets.DJANGO_SECRET_KEY }}'


    - name: Deploy React to Cloud Run
      run: |
        gcloud run deploy react-app \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/react-app:latest \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --region ${{ secrets.GCP_REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --memory 1Gi \
          --set-env-vars NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }},NEXT_PUBLIC_ROOT_URL=${{ secrets.NEXT_PUBLIC_ROOT_URL }},NEXT_PUBLIC_PROTOCOL=${{ secrets.NEXT_PUBLIC_PROTOCOL }},NEXT_PUBLIC_TILESERV_URL=${{ secrets.NEXT_PUBLIC_TILESERV_URL }}

    - name: Deploy pg_tileserv to Cloud Run
      run: |
        gcloud run deploy pg-tileserv \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/pg-tileserv:latest \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --region ${{ secrets.GCP_REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --add-cloudsql-instances ${{ secrets.GCP_PROJECT_ID }}:${{ secrets.GCP_REGION }}:${{ secrets.DB_NAME }} \
          --set-env-vars PGHOST=${{ secrets.DB_HOST }},PGDATABASE=${{ secrets.DB_NAME }},PGUSER=${{ secrets.DB_USER }},PGPASSWORD='${{ secrets.DB_PASSWORD }}',PGPORT=5432 \
          --memory 512Mi 
          
